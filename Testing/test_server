#!/usr/bin/env python

import asyncio
import websockets
import socket
from base64 import b64decode
import wave
import json
import math

def get_ip():
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    try:
        # doesn't even have to be reachable
        s.connect(('10.255.255.255', 1))
        IP = s.getsockname()[0]
    except Exception:
        IP = '127.0.0.1'
    finally:
        s.close()
    return IP


hostname = socket.gethostname()
IPAddr = get_ip()
print("Your Computer Name is: " + hostname)
print("Your Computer IP Address is: " + IPAddr)
print(
    "* Enter {0}:5000 in the app.\n* Press the 'Set IP Address' button.\n* Select the sensors to stream.\n* Update the 'update interval' by entering a value in ms.".format(IPAddr))

def process_values(y,z):
    avg_z = 1.614977
    avg_y = -7.93195
    std_z = 3.441466
    std_y = 5.032324

    norm_z = (z-avg_z)/std_z
    norm_y = (y-avg_y)/std_y
    return (norm_z/norm_y)

async def echo(websocket, path):
    lastCouple = [0,0,0,0,0,0,0,0]
    index = 0
    limit = -1.3
    print(">>>>>>>>>>>>Starting<<<<<<<<<<<<")
    async for message in websocket:
        if path == '/accelerometer':
            data = await websocket.recv()
            jsonData = json.loads(data)
            y = float(jsonData["y"])
            z = float(jsonData["z"])
            
            test_value = process_values(y,z)
            state = ">>>>>>>>>><<<<<<<<<<"
            if(test_value < limit):
                state = "moving"
            else:
                for i in range(0, len(lastCouple)):
                    if(lastCouple[i] < limit):
                        state = "running"
                        break
            
            lastCouple[index] = test_value
            index += 1
            if(index >= len(lastCouple)):
                index = 0
            print(state)
            # print(data)
            # f = open("accelerometer.txt", "a")
            # f.write(data+"\n")

asyncio.get_event_loop().run_until_complete(
    websockets.serve(echo, '0.0.0.0', 5000, max_size=1_000_000_000))
asyncio.get_event_loop().run_forever()
